==================== install easy admin bundle which server as admin component ============================
https://symfony.com/doc/current/bundles/EasyAdminBundle/index.html
composer require admin
==================== install api platform package ============================
composer require api
composer require --dev api-platform/schema-generator ( of not working add "--with-all-dependencies" )

======================== entity property define ============================
https://developers.google.com/search/docs/advanced/structured-data/product
https://schema.org/Product

================== generate entity by command ============================
vendor/bin/schema generate-types src/ config/schema.yaml
     > bin/console doctrine:database:create
     > bin/console doctrine:schema:update --force

================== upload bundle ============================
composer require vich/uploader-bundle
    > update entity
        > bin/console doctrine:schema:update --force

================= create auth ( follow create-auth.png ) =====================
bin/console make:auth

then run
    > bin/console security:encode-password
        > copy password add new user in database

================= allow read write in database =====================
@ApiResource(iri="http://schema.org/Offer",normalizationContext={"groups"={"read"}},denormalizationContext={"groups"={"write"}})

@Groups({"read"}) : for read
@Groups({"write"}) : for write
@Groups({"read","write"}) : for read write

@ApiProperty(attributes={"fetchEager": true}) : allow eager load , call only one query

======================= test with rich results ================================
https://search.google.com/test/rich-results
    > Ex: https://search.google.com/test/rich-results/result?id=q8N5Fa2iRrxkF8yrPyKdnw

https://developers.google.com/search/docs/advanced/structured-data
    > https://validator.schema.org/#url=https%3A%2F%2Fwww.obi.pl%2F

======================== JWT authentication  ================================
bin/console make:controller ApiController => create controller for authenticate magical by symfony
composer req "lexik/jwt-authentication-bundle"
mkdir config/jwt
> openssl genrsa -out config/jwt/private.pem -aes256 4096
    paste key from .env file > JWT_PASSPHRASE : '255469ecd5fc3b3f247f839d1a950a73'
> openssl rsa -pubout -in config/jwt/private.pem -out config/jwt/public.pem
    paste key from .env file > JWT_PASSPHRASE : '255469ecd5fc3b3f247f839d1a950a73'

config/packages/security.yaml
    "stateless: true" mean not using cookie session
    "anonymous: true" for auththen and authorization

bin/console make:entity User
    > offers
    > relation
    > Offers
    > OneToMany
    ...
    bin/console doctrine:schema:update --force

    User.php > offers > orphanRemoval=true : mean when delete user, offers is delete too

    @ORM\JoinColumn(nullable=true) : can create offers first then assign to user later

bin/console make:subscriber
    > Symfony\Component\HttpKernel\Event\ViewEvent

bin/console debug:event

composer require symfony/swiftmailer-bundle
composer require phpunit/phpunit
composer require --dev symfony/test-pack http-client justinrainbow/json-schema

php vendor/bin/simple-phpunit